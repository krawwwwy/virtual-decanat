version: '3.8'

services:
  # PostgreSQL - основная база данных
  postgres:
    image: postgres:16-alpine
    container_name: decanat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: decanat
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend - клиентское веб-приложение
  frontend:
    image: nginx:alpine
    container_name: decanat-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - api-gateway

  # API Gateway - единая точка входа для всех API
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: decanat-api-gateway
    restart: unless-stopped
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8081
      - SCHEDULE_SERVICE_URL=http://schedule-service:8082
      - CLUB_SERVICE_URL=http://club-service:8083
      - PERFORMANCE_SERVICE_URL=http://performance-service:8084
      - APPLICANT_SERVICE_URL=http://applicant-service:8085
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - schedule-service
      - club-service
      - performance-service
      - applicant-service

  # Сервис аутентификации - управление пользователями и авторизацией
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: decanat-auth-service
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=decanat
      - JWT_SECRET=your-secret-key
    volumes:
      - ./frontend/figma:/app/frontend/figma
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"

  # Сервис расписания - управление учебным расписанием
  schedule-service:
    build:
      context: ./schedule-service
      dockerfile: Dockerfile
    container_name: decanat-schedule-service
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=decanat
      - AUTH_SERVICE_URL=http://auth-service:8081
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "8082:8082"

  # Сервис студенческих объединений - управление клубами и студенческими организациями
  club-service:
    build:
      context: ./club-service
      dockerfile: Dockerfile
    container_name: decanat-club-service
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=decanat
      - AUTH_SERVICE_URL=http://auth-service:8081
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "8083:8083"

  # Сервис успеваемости - performance-service
  performance-service:
    build:
      context: ./performance-service
      dockerfile: Dockerfile
    container_name: decanat-performance-service
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=decanat
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/decanat?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "8084:8084"

  # Сервис заявок - управление заявками абитуриентов
  applicant-service:
    build:
      context: ./applicant-service
      dockerfile: Dockerfile
    container_name: decanat-applicant-service
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=decanat
      - AUTH_SERVICE_URL=http://auth-service:8081
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "8085:8085"
    
volumes:
  postgres-data: 